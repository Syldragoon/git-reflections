When would you want to use a remote repository rather than keeping all your work local?
When collaboration is needed: this is suitable in most of cases! :)

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
This allows to know the current version of the working directory: by having automatic sync with the remote, it would be a mess.
Moreover, the local repo can be used offline; this feature is not compatible with automatic sync.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks: clone of repos inside GitHub: to use while working on other existing repos on GitHub, to use to contribute
Clones: clone from GitHub repo to local or from local to local: to use locally with own working environment
Branches: last commit originated from common ancestor commit: to use one specific tasks in order to make easier context switching

What is the benefit of having a copy of the last known state of the remote stored locally?
It could help to know from when no pull was done from the remote repo.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Without collaborating through GitHub, Dropbox could be used.
Easier: easier for people not knowing about versioners such as GIT
Harder: difficult to solve conflicts in order to merge changes and to review new changes

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
While not using master branch, it allows to isolate master branch from incoming changes and to have branches dedicated for testing purpose. While pushing directly to master, it allows to have quicker fixes and features and it can be less difficult to operate for the developer.
