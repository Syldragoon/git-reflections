How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
By learning from mistakes
By learning from other

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
+: logical way to versonize
-: risk to commit not enough

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because of easy links between files in programming environment; because of release tracking in test and production
Google Docs: no need as each files are not linked; files need sometimes to be reverted independently

How can you use the commands git log and git diff to view the history of files?
This can be used while investigating the origin of changes and to be able to revert them.

How might using version control make you more confident to make changes that could break something?
You have always the possibility to go back on the history using checkout.

Now that you have your workspace set up, what do you want to try using Git for?
Collaborating
